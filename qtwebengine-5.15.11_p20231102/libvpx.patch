From 83c857ae99892f8e7b86f50252900437e05e0724 Mon Sep 17 00:00:00 2001
From: Marcus Comstedt <marcus@mc.pp.se>
Date: Wed, 6 Jan 2021 13:25:36 +0100
Subject: [PATCH] Interpret "ppc64" as big endian

---
 .../chromium/third_party/libvpx/BUILD.gn      | 18 ++++++++++++++++
 .../third_party/libvpx/generate_gni.sh        | 18 ++++++++++++++--
 .../third_party/libvpx/libvpx_srcs.gni        | 21 +++++++++++++++++++
 .../source/libvpx/build/make/configure.sh     |  7 +++++++
 .../libvpx/source/libvpx/configure            |  1 +
 5 files changed, 63 insertions(+), 2 deletions(-)

diff --git a/src/3rdparty/chromium/third_party/libvpx/BUILD.gn b/src/3rdparty/chromium/third_party/libvpx/BUILD.gn
index 8cdea06f2..91ba1a67f 100644
--- a/src/3rdparty/chromium/third_party/libvpx/BUILD.gn
+++ b/src/3rdparty/chromium/third_party/libvpx/BUILD.gn
@@ -267,6 +267,19 @@ if (current_cpu == "arm") {
   }
 }
 
+if (current_cpu == "ppc64" || current_cpu == "ppc64el") {
+  source_set("libvpx_intrinsics_vsx") {
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ ":libvpx_config" ]
+    cflags = [
+      "-maltivec",
+      "-mvsx",
+    ]
+    sources = libvpx_srcs_ppc64_vsx
+  }
+}
+
 # Converts ARM assembly files to GAS style.
 if (current_cpu == "arm" && arm_assembly_sources != []) {
   action_foreach("convert_arm_assembly") {
@@ -328,6 +341,8 @@ static_library("bundled_libvpx") {
     }
   } else if (current_cpu == "mipsel" || current_cpu == "mips64el") {
     sources = libvpx_srcs_mips
+  } else if (current_cpu == "ppc64" || current_cpu == "ppc64el") {
+    sources = libvpx_srcs_ppc64
   } else if (current_cpu == "arm") {
     if (is_chromeos) {
       sources = libvpx_srcs_arm_neon_highbd
@@ -373,6 +388,9 @@ static_library("bundled_libvpx") {
   if (current_cpu == "arm" && arm_assembly_sources != []) {
     deps += [ ":libvpx_assembly_arm" ]
   }
+  if (current_cpu == "ppc64" || current_cpu == "ppc64el") {
+    deps += [ ":libvpx_intrinsics_vsx" ]
+  }
 
   public_configs = [ ":libvpx_external_config" ]
 }
diff --git a/src/3rdparty/chromium/third_party/libvpx/generate_gni.sh b/src/3rdparty/chromium/third_party/libvpx/generate_gni.sh
index 0ec4f5941..156f93b1b 100755
--- a/src/3rdparty/chromium/third_party/libvpx/generate_gni.sh
+++ b/src/3rdparty/chromium/third_party/libvpx/generate_gni.sh
@@ -135,6 +135,11 @@ function convert_srcs_to_project_files {
       egrep 'neon.*(\.c|\.asm)$')
   fi
 
+  if [ "libvpx_srcs_ppc64" == "$2" ]; then
+    local intrinsic_list=$(echo "$source_list" | \
+      egrep 'vsx.*(\.c|\.asm)$')
+  fi
+
   # Remove these files from the main list.
   source_list=$(comm -23 <(echo "$source_list") <(echo "$intrinsic_list"))
 
@@ -168,11 +173,15 @@ function convert_srcs_to_project_files {
     local assembly_sources=$(echo -e "$source_list\n$intrinsic_list" | \
       egrep '.asm$')
     local neon_sources=$(echo "$intrinsic_list" | grep '_neon\.c$')
+    local vsx_sources=$(echo "$intrinsic_list" | grep '_vsx\.c$')
     write_gni c_sources $2 "$BASE_DIR/libvpx_srcs.gni"
     write_gni assembly_sources $2_assembly "$BASE_DIR/libvpx_srcs.gni"
     if [ 0 -ne ${#neon_sources} ]; then
       write_gni neon_sources $2_neon "$BASE_DIR/libvpx_srcs.gni"
     fi
+    if [ 0 -ne ${#vsx_sources} ]; then
+      write_gni vsx_sources $2_vsx "$BASE_DIR/libvpx_srcs.gni"
+    fi
   fi
 }
 
@@ -361,8 +370,9 @@ gen_config_files linux/arm-neon-highbd "--target=armv7-linux-gcc ${all_platforms
 gen_config_files linux/arm64-highbd "--target=armv8-linux-gcc ${all_platforms} ${HIGHBD}"
 gen_config_files linux/mipsel "--target=mips32-linux-gcc ${all_platforms}"
 gen_config_files linux/mips64el "--target=mips64-linux-gcc ${all_platforms}"
-gen_config_files linux/ppc64 "--target=generic-gnu $HIGHBD ${all_platforms}"
 gen_config_files linux/generic "--target=generic-gnu $HIGHBD ${all_platforms}"
+gen_config_files linux/ppc64 "--target=ppc64-linux-gcc --enable-vsx ${all_platforms}"
+gen_config_files linux/ppc64le "--target=ppc64le-linux-gcc --enable-vsx ${all_platforms}"
 gen_config_files win/arm64 "--target=arm64-win64-vs15 ${all_platforms} ${HIGHBD}"
 gen_config_files win/ia32 "--target=x86-win32-vs14 ${all_platforms} ${x86_platforms}"
 gen_config_files win/x64 "--target=x86_64-win64-vs14 ${all_platforms} ${x86_platforms}"
@@ -388,6 +398,7 @@ lint_config linux/arm64-highbd
 lint_config linux/mipsel
 lint_config linux/mips64el
 lint_config linux/ppc64
+lint_config linux/ppc64le
 lint_config linux/generic
 lint_config win/arm64
 lint_config win/ia32
@@ -417,7 +428,8 @@ gen_rtcd_header linux/arm-neon-highbd armv7
 gen_rtcd_header linux/arm64-highbd armv8
 gen_rtcd_header linux/mipsel mipsel
 gen_rtcd_header linux/mips64el mips64el
-gen_rtcd_header linux/ppc64 generic
+gen_rtcd_header linux/ppc64 ppc64
+gen_rtcd_header linux/ppc64le ppc64le
 gen_rtcd_header linux/generic generic
 gen_rtcd_header win/arm64 armv8
 gen_rtcd_header win/ia32 x86 "${require_sse2}"
@@ -509,6 +521,8 @@ if [ -z $ONLY_CONFIGS ]; then
   make libvpx_srcs.txt target=libs $config > /dev/null
   convert_srcs_to_project_files libvpx_srcs.txt libvpx_srcs_ppc64
 
+  echo "PPC64LE source list is identical to PPC64 source list. No need to generate it."
+
   echo "Generate NaCl source list."
   config=$(print_config_basic nacl)
   make_clean
diff --git a/src/3rdparty/chromium/third_party/libvpx/libvpx_srcs.gni b/src/3rdparty/chromium/third_party/libvpx/libvpx_srcs.gni
index 24450c414..d5196e88c 100644
--- a/src/3rdparty/chromium/third_party/libvpx/libvpx_srcs.gni
+++ b/src/3rdparty/chromium/third_party/libvpx/libvpx_srcs.gni
@@ -3737,6 +3737,21 @@ libvpx_srcs_mips = [
   "//third_party/libvpx/source/libvpx/vpx_util/vpx_write_yuv_frame.h",
 ]
 libvpx_srcs_mips_assembly = []
+ libvpx_srcs_ppc64_assembly = []
+libvpx_srcs_ppc64_vsx = [
+  "//third_party/libvpx/source/libvpx/vp9/common/ppc/vp9_idct_vsx.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/ppc/vp9_quantize_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/deblock_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/fdct32x32_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/hadamard_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/intrapred_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/inv_txfm_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/quantize_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/sad_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/subtract_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/variance_vsx.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/vpx_convolve_vsx.c",
+]
 libvpx_srcs_nacl = [
   "//third_party/libvpx/source/libvpx/vp8/common/alloccommon.c",
   "//third_party/libvpx/source/libvpx/vp8/common/alloccommon.h",
@@ -4026,6 +4041,10 @@ libvpx_srcs_nacl = [
   "//third_party/libvpx/source/libvpx/vpx_dsp/inv_txfm.h",
   "//third_party/libvpx/source/libvpx/vpx_dsp/loopfilter.c",
   "//third_party/libvpx/source/libvpx/vpx_dsp/postproc.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/bitdepth_conversion_vsx.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/transpose_vsx.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/txfm_common_vsx.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/ppc/types_vsx.h",
   "//third_party/libvpx/source/libvpx/vpx_dsp/prob.c",
   "//third_party/libvpx/source/libvpx/vpx_dsp/prob.h",
   "//third_party/libvpx/source/libvpx/vpx_dsp/psnr.c",
@@ -4055,6 +4074,8 @@ libvpx_srcs_nacl = [
   "//third_party/libvpx/source/libvpx/vpx_ports/mem_ops.h",
   "//third_party/libvpx/source/libvpx/vpx_ports/mem_ops_aligned.h",
   "//third_party/libvpx/source/libvpx/vpx_ports/msvc.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/ppc.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/ppc_cpudetect.c",
   "//third_party/libvpx/source/libvpx/vpx_ports/static_assert.h",
   "//third_party/libvpx/source/libvpx/vpx_ports/system_state.h",
   "//third_party/libvpx/source/libvpx/vpx_ports/vpx_once.h",
diff --git a/src/3rdparty/chromium/third_party/libvpx/source/libvpx/build/make/configure.sh b/src/3rdparty/chromium/third_party/libvpx/source/libvpx/build/make/configure.sh
index 8bdfef39d..d19d5964a 100644
--- a/src/3rdparty/chromium/third_party/libvpx/source/libvpx/build/make/configure.sh
+++ b/src/3rdparty/chromium/third_party/libvpx/source/libvpx/build/make/configure.sh
@@ -759,6 +759,9 @@ process_common_toolchain() {
         ;;
       power*64le*-*)
         tgt_isa=ppc64le
+	;;
+      power*64*-*)
+        tgt_isa=ppc64
         ;;
       *mips64el*)
         tgt_isa=mips64
@@ -827,8 +830,12 @@ process_common_toolchain() {
     mips*)
       enable_feature mips
       ;;
+    ppc*le)
+      enable_feature ppc
+      ;;
     ppc*)
       enable_feature ppc
+      enable_feature big_endian
       ;;
   esac
 
diff --git a/src/3rdparty/chromium/third_party/libvpx/source/libvpx/configure b/src/3rdparty/chromium/third_party/libvpx/source/libvpx/configure
index 32272ce36..3e46f725b 100755
--- a/src/3rdparty/chromium/third_party/libvpx/source/libvpx/configure
+++ b/src/3rdparty/chromium/third_party/libvpx/source/libvpx/configure
@@ -114,6 +114,7 @@ all_platforms="${all_platforms} armv7s-darwin-gcc"
 all_platforms="${all_platforms} armv8-linux-gcc"
 all_platforms="${all_platforms} mips32-linux-gcc"
 all_platforms="${all_platforms} mips64-linux-gcc"
+all_platforms="${all_platforms} ppc64-linux-gcc"
 all_platforms="${all_platforms} ppc64le-linux-gcc"
 all_platforms="${all_platforms} sparc-solaris-gcc"
 all_platforms="${all_platforms} x86-android-gcc"
-- 
2.41.0

