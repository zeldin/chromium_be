From 060b899487bbf873f5191326500f52cf65b93dc3 Mon Sep 17 00:00:00 2001
From: Georgy Yakovlev <gyakovlev@gentoo.org>
Date: Wed, 27 May 2020 03:00:22 -0700
Subject: [PATCH 1/2] ppc64 patchset

---
 third_party/dav1d/BUILD.gn                    | 21 +++++++++++
 third_party/dav1d/config/linux/ppc64/config.h | 35 +++++++++++++++++++
 third_party/dav1d/dav1d_generated.gni         |  5 +++
 third_party/dav1d/generate_source.py          |  3 +-
 third_party/dav1d/libdav1d/src/ppc/types.h    | 15 ++++++++
 5 files changed, 78 insertions(+), 1 deletion(-)
 create mode 100644 third_party/dav1d/config/linux/ppc64/config.h

diff --git a/third_party/dav1d/BUILD.gn b/third_party/dav1d/BUILD.gn
index 7616b7f3f6..a7bdcaffd0 100644
--- a/third_party/dav1d/BUILD.gn
+++ b/third_party/dav1d/BUILD.gn
@@ -183,6 +183,8 @@ static_library("dav1d_8bit") {
     sources += arm_template_sources
   } else if (current_cpu == "arm64") {
     sources += arm_template_sources
+  } else if (current_cpu == "ppc64") {
+    sources += ppc64_template_sources
   }
 
   cflags = dav1d_copts
@@ -211,6 +213,8 @@ static_library("dav1d_10bit") {
     sources += arm_template_sources
   } else if (current_cpu == "arm64") {
     sources += arm_template_sources
+  } else if (current_cpu == "ppc64") {
+    sources += ppc64_template_sources
   }
 
   cflags = dav1d_copts
@@ -262,6 +266,21 @@ if (current_cpu == "x86" || current_cpu == "x64") {
       defines = [ "PREFIX" ]
     }
 
+    cflags = dav1d_copts
+  }
+} else if (current_cpu == "ppc64") {
+  static_library("dav1d_ppc") {
+    sources = [
+      "libdav1d/src/ppc/cpu.c",
+      "libdav1d/src/ppc/cpu.h",
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [
+      "//build/config/compiler:no_chromium_code",
+      ":dav1d_config",
+    ]
+
     cflags = dav1d_copts
   }
 }
@@ -291,5 +310,7 @@ static_library("dav1d") {
     }
   } else if (current_cpu == "arm" || current_cpu == "arm64") {
     deps += [ ":dav1d_arm" ]
+  } else if (current_cpu == "ppc64") {
+    deps += [ ":dav1d_ppc" ]
   }
 }
diff --git a/third_party/dav1d/config/linux/ppc64/config.h b/third_party/dav1d/config/linux/ppc64/config.h
new file mode 100644
index 0000000000..f6ca57f7f0
--- /dev/null
+++ b/third_party/dav1d/config/linux/ppc64/config.h
@@ -0,0 +1,35 @@
+/*
+ * Autogenerated by the Meson build system.
+ * Do not edit, your changes will be lost.
+ */
+
+#pragma once
+
+#define ARCH_AARCH64 0
+
+#define ARCH_ARM 0
+
+#define ARCH_PPC64LE 1
+
+#define ARCH_X86 0
+
+#define ARCH_X86_32 0
+
+#define ARCH_X86_64 0
+
+#define CONFIG_16BPC 1
+
+#define CONFIG_8BPC 1
+
+#define CONFIG_LOG 1
+
+#define ENDIANNESS_BIG 0
+
+#define HAVE_ASM 1
+
+#define HAVE_GETAUXVAL 1
+
+#define HAVE_POSIX_MEMALIGN 1
+
+#define HAVE_UNISTD_H 1
+
diff --git a/third_party/dav1d/dav1d_generated.gni b/third_party/dav1d/dav1d_generated.gni
index 95fba31e1a..c3851ca37a 100644
--- a/third_party/dav1d/dav1d_generated.gni
+++ b/third_party/dav1d/dav1d_generated.gni
@@ -76,6 +76,11 @@ arm_template_sources = [
   "libdav1d/src/arm/mc_init_tmpl.c",
 ]
 
+ppc64_template_sources = [
+  "libdav1d/src/ppc/cdef_init_tmpl.c",
+  "libdav1d/src/ppc/looprestoration_init_tmpl.c",
+]
+
 template_sources = [
   "libdav1d/src/cdef_apply_tmpl.c",
   "libdav1d/src/cdef_tmpl.c",
diff --git a/third_party/dav1d/generate_source.py b/third_party/dav1d/generate_source.py
index 9ab5e00b83..ad3feffee4 100755
--- a/third_party/dav1d/generate_source.py
+++ b/third_party/dav1d/generate_source.py
@@ -50,7 +50,8 @@ def WriteGn(fd):
   WriteArray(fd, "arm32_asm_sources", glob.glob("libdav1d/src/arm/32/*.S"))
   WriteArray(fd, "arm64_asm_sources", glob.glob("libdav1d/src/arm/64/*.S"))
   WriteArray(fd, "arm_template_sources", glob.glob("libdav1d/src/arm/*_tmpl.c"))
-
+  WriteArray(fd, "ppc64_template_sources", glob.glob("libdav1d/src/ppc/*_tmpl.c"))
+ 
   template_sources = glob.glob("libdav1d/src/*_tmpl.c")
   WriteArray(fd, "template_sources", template_sources)
 
diff --git a/third_party/dav1d/libdav1d/src/ppc/types.h b/third_party/dav1d/libdav1d/src/ppc/types.h
index 0b4bd72f0e..a0caa5e710 100644
--- a/third_party/dav1d/libdav1d/src/ppc/types.h
+++ b/third_party/dav1d/libdav1d/src/ppc/types.h
@@ -51,4 +51,19 @@
 #define u16l_to_i32(v) ((i32x4) vec_mergel((u16x8) v, vec_splat_u16(0)))
 #define i16l_to_i32(v) ((i32x4) vec_unpackl((i16x8)v))
 
+#if defined(__clang__)
+#undef vec_splats
+#define vec_splats(N)                     \
+    _Generic((N),                         \
+        unsigned char:      ((u8x16)(N)), \
+        signed char:        ((i8x16)(N)), \
+        unsigned short:     ((u16x8)(N)), \
+        signed short:       ((i16x8)(N)), \
+        unsigned int:       ((u32x4)(N)), \
+        signed int:         ((i32x4)(N)), \
+        unsigned long long: ((u64x2)(N)), \
+        signed long long:   ((i64x2)(N))  \
+    )
+#endif
+
 #endif /* DAV1D_SRC_PPC_TYPES_H */
-- 
2.26.2


From 5da7e341a7dfcabc3fd72ea74daf9695e65b9fd8 Mon Sep 17 00:00:00 2001
From: Marcus Comstedt <marcus@mc.pp.se>
Date: Wed, 6 Jan 2021 13:16:45 +0100
Subject: [PATCH 2/2] Interpret "ppc64" as big endian

---
 third_party/dav1d/BUILD.gn                    | 4 ++++
 third_party/dav1d/config/linux/ppc64/config.h | 8 +++++---
 third_party/dav1d/libdav1d/src/cpu.h          | 2 +-
 3 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/third_party/dav1d/BUILD.gn b/third_party/dav1d/BUILD.gn
index a7bdcaffd0..ca9ee6f4aa 100644
--- a/third_party/dav1d/BUILD.gn
+++ b/third_party/dav1d/BUILD.gn
@@ -121,6 +121,10 @@ if (is_win) {
   }
 }
 
+if (current_cpu == "ppc64") {
+  dav1d_copts += [ "-maltivec", "-mvsx" ]
+}
+
 if (enable_nasm) {
   nasm_assemble("dav1d_asm") {
     sources = x86_asm_sources
diff --git a/third_party/dav1d/config/linux/ppc64/config.h b/third_party/dav1d/config/linux/ppc64/config.h
index f6ca57f7f0..c3138078ab 100644
--- a/third_party/dav1d/config/linux/ppc64/config.h
+++ b/third_party/dav1d/config/linux/ppc64/config.h
@@ -9,7 +9,9 @@
 
 #define ARCH_ARM 0
 
-#define ARCH_PPC64LE 1
+#define ARCH_PPC64LE 0
+
+#define ARCH_PPC64 1
 
 #define ARCH_X86 0
 
@@ -23,9 +25,9 @@
 
 #define CONFIG_LOG 1
 
-#define ENDIANNESS_BIG 0
+#define ENDIANNESS_BIG 1
 
-#define HAVE_ASM 1
+#define HAVE_ASM 0
 
 #define HAVE_GETAUXVAL 1
 
diff --git a/third_party/dav1d/libdav1d/src/cpu.h b/third_party/dav1d/libdav1d/src/cpu.h
index d5299f243b..d65edfc389 100644
--- a/third_party/dav1d/libdav1d/src/cpu.h
+++ b/third_party/dav1d/libdav1d/src/cpu.h
@@ -36,7 +36,7 @@
 
 #if ARCH_AARCH64 || ARCH_ARM
 #include "src/arm/cpu.h"
-#elif ARCH_PPC64LE
+#elif ARCH_PPC64LE || ARCH_PPC64
 #include "src/ppc/cpu.h"
 #elif ARCH_X86
 #include "src/x86/cpu.h"
-- 
2.26.2

